<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="Remix/Exception.php" hash="91ba9cd60622d50ca60e236065796b02" package="BestBuy\Service\Remix">
    <docblock line="3">
      <description>LICENSE</description>
      <long-description>&lt;p&gt;This source file is subject to the BSD license bundled with this package.&lt;/p&gt;

&lt;p&gt;Available online: {@link http://www.opensource.org/licenses/bsd-license.php}&lt;/p&gt;

&lt;p&gt;If you did not receive a copy of the license, and are unable to obtain it,
email {@link mailto:matt@mattwilliamsnyc.com matt@mattwilliamsnyc.com},
and I will send you a copy.&lt;/p&gt;

&lt;p&gt;{@link http://mattwilliamsnyc.com Matt Williams}, the author,
is neither affiliated with, nor endorsed by,
{@link http://www.bestbuy.com/ Best Buy}.&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="BestBuy"/>
      <tag line="3" name="package" description="BestBuy\Service\Remix"/>
      <tag line="3" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
      <tag line="3" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt;"/>
      <tag line="3" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      <tag line="3" name="license" description="http://www.opensource.org/licenses/bsd-license.php"/>
      <tag line="3" name="version" description="$Id: Exception.php 6 2009-02-01 20:34:37Z mattwilliamsnyc $"/>
    </docblock>
    <class final="false" abstract="false" namespace="BestBuy\Service\Remix" line="38" package="BestBuy\Service\Remix">
      <extends>\Exception</extends>
      <name>Exception</name>
      <full_name>\BestBuy\Service\Remix\Exception</full_name>
      <docblock line="29">
        <description>Base exception class used by the BestBuy\Service\Remix package.</description>
        <long-description></long-description>
        <tag line="29" name="category" description="BestBuy"/>
        <tag line="29" name="package" description="BestBuy\Service\Remix"/>
        <tag line="29" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
        <tag line="29" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt;"/>
        <tag line="29" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      </docblock>
    </class>
  </file>
  <file path="Remix/Response.php" hash="cc79f16ea6a2e3abba49fa942165e273" package="BestBuy\Service\Remix\Response">
    <docblock line="3">
      <description>LICENSE</description>
      <long-description>&lt;p&gt;This source file is subject to the BSD license bundled with this package.&lt;/p&gt;

&lt;p&gt;Available online: {@link http://www.opensource.org/licenses/bsd-license.php}&lt;/p&gt;

&lt;p&gt;If you did not receive a copy of the license, and are unable to obtain it,
email {@link mailto:matt@mattwilliamsnyc.com matt@mattwilliamsnyc.com},
and I will send you a copy.&lt;/p&gt;

&lt;p&gt;{@link http://mattwilliamsnyc.com Matt Williams}, the author,
is neither affiliated with, nor endorsed by,
{@link http://www.bestbuy.com/ Best Buy}.&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="BestBuy"/>
      <tag line="3" name="package" description="BestBuy\Service\Remix"/>
      <tag line="3" name="subpackage" description="Response"/>
      <tag line="3" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
      <tag line="3" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt;"/>
      <tag line="3" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      <tag line="3" name="license" description="http://www.opensource.org/licenses/bsd-license.php"/>
      <tag line="3" name="version" description="$Id: Response.php 6 2009-02-01 20:34:37Z mattwilliamsnyc $"/>
    </docblock>
    <class final="false" abstract="false" namespace="BestBuy\Service\Remix" line="128" package="BestBuy\Service\Remix\Response">
      <extends/>
      <name>Response</name>
      <full_name>\BestBuy\Service\Remix\Response</full_name>
      <docblock line="30">
        <description>BestBuy\Service\Remix\Response represents a response to a
{@link http://remix.bestbuy.com Remix} API call.</description>
        <long-description>&lt;p&gt;In addition to the $_data property (accessible via $response-&gt;data or $response-&gt;getData()),
a BestBuy\Service\Remix\Response provides the following HTTP metadata collected by
{@link http://curl.haxx.se/ cURL}:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;b&gt;url&lt;/b&gt;
    (Last effective URL)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;content_type&lt;/b&gt;
    (Response Content-type, NULL indicates server did not send a valid Content-Type)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;http_code&lt;/b&gt;
    (Last received HTTP code)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;header_size&lt;/b&gt;
    (Total size of all headers received)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;request_size&lt;/b&gt;
    (Total size of issued requests)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;filetime&lt;/b&gt;
    (Remote time of the retrieved document, if unknown, -1 is returned)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;ssl_verify_result&lt;/b&gt;
    (Result of SSL certification verification)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;redirect_count&lt;/b&gt;
    (Number of redirection steps before final transaction was started)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;total_time&lt;/b&gt;
    (Total transaction time in seconds for last transfer)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;namelookup_time&lt;/b&gt;
    (Time in seconds until name resolving was complete)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;connect_time&lt;/b&gt;
    (Time in seconds it took to establish the connection)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;pretransfer_time&lt;/b&gt;
    (Time in seconds from start until just before file transfer begins)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;size_upload&lt;/b&gt;
    (Total number of bytes uploaded)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;size_download&lt;/b&gt;
    (Total number of bytes downloaded)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;speed_download&lt;/b&gt;
    (Average download speed)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;speed_upload&lt;/b&gt;
    (Average upload speed)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;download_content_length&lt;/b&gt;
    (Content-length of download, read from Content-Length: field)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;upload_content_length&lt;/b&gt;
    (Specified size of upload)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;starttransfer_time&lt;/b&gt;
    (Time in seconds until the first byte is about to be transferred)
  &lt;/li&gt;
  &lt;li&gt;
    &lt;b&gt;redirect_time&lt;/b&gt;
    (Time in seconds of all redirection steps before final transaction was started)
  &lt;/li&gt;
&lt;/ul&gt;</long-description>
        <tag line="30" name="category" description="BestBuy"/>
        <tag line="30" name="package" description="BestBuy\Service\Remix"/>
        <tag line="30" name="subpackage" description="Response"/>
        <tag line="30" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
        <tag line="30" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt;"/>
        <tag line="30" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="135" namespace="BestBuy\Service\Remix" package="Default">
        <name>$metadata</name>
        <default>array()</default>
        <docblock line="130">
          <description>Metadata related to the HTTP response collected by cURL</description>
          <long-description></long-description>
          <tag line="130" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="142" namespace="BestBuy\Service\Remix" package="Default">
        <name>$data</name>
        <default>''</default>
        <docblock line="137">
          <description>Response body (if any) returned by Remix</description>
          <long-description></long-description>
          <tag line="137" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="150" package="BestBuy\Service\Remix\Response">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="144">
          <description>Creates a new BestBuy\Service\Remix\Response object.</description>
          <long-description></long-description>
          <tag line="144" name="param" description="Response body (if any) returned by Remix" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="param" description="HTTP {@link http://us3.php.net/curl_getinfo curl_getinfo() metadata}" type="array" variable="$meta">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="150">
          <name>$meta</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="163" package="BestBuy\Service\Remix\Response">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="156">
          <description>Enables read access to data and curl metadata via object properties (e.g.</description>
          <long-description>&lt;p&gt;$response-&gt;http_code).&lt;/p&gt;</long-description>
          <tag line="156" name="param" description="Name of the property to be accessed" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="185" package="BestBuy\Service\Remix\Response">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="178">
          <description>Enables verification of metadata accessible via object properties (e.g.</description>
          <long-description>&lt;p&gt;$response-&gt;http_code).&lt;/p&gt;</long-description>
          <tag line="178" name="param" description="Name of the property whose presence will be verified" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="199" package="BestBuy\Service\Remix\Response">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="194">
          <description>Allows casting of this response object to a string; returns raw response body.</description>
          <long-description></long-description>
          <tag line="194" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="209" package="BestBuy\Service\Remix\Response">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="204">
          <description>Returns the content body (if any) returned by Remix.</description>
          <long-description></long-description>
          <tag line="204" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="219" package="BestBuy\Service\Remix\Response">
        <name>toSimpleXml</name>
        <full_name>toSimpleXml</full_name>
        <docblock line="214">
          <description>Returns response document wrapped in a {@link http://us2.php.net/simplexml SimpleXml} object.</description>
          <long-description></long-description>
          <tag line="214" name="return" description="" type="\SimpleXmlElement|boolean">
            <type by_reference="false">\SimpleXmlElement</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="235" package="BestBuy\Service\Remix\Response">
        <name>isError</name>
        <full_name>isError</full_name>
        <docblock line="230">
          <description>Checks the HTTP status code of the response for 4xx or 5xx class errors.</description>
          <long-description></long-description>
          <tag line="230" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="245" package="BestBuy\Service\Remix\Response">
        <name>toArray</name>
        <full_name>toArray</full_name>
        <docblock line="240">
          <description>Returns response data (and metadata) as an associative array.</description>
          <long-description></long-description>
          <tag line="240" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Remix/Type/Exception.php" hash="94d3686763a6bb81d1ac2999023bf8c5" package="BestBuy\Service\Remix\Type">
    <docblock line="3">
      <description>LICENSE</description>
      <long-description>&lt;p&gt;This source file is subject to the BSD license bundled with this package.&lt;/p&gt;

&lt;p&gt;Available online: {@link http://www.opensource.org/licenses/bsd-license.php}&lt;/p&gt;

&lt;p&gt;If you did not receive a copy of the license, and are unable to obtain it,
email {@link mailto:matt@mattwilliamsnyc.com matt@mattwilliamsnyc.com},
and I will send you a copy.&lt;/p&gt;

&lt;p&gt;{@link http://mattwilliamsnyc.com Matt Williams}, the author,
is neither affiliated with, nor endorsed by,
{@link http://www.bestbuy.com/ Best Buy}.&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="BestBuy"/>
      <tag line="3" name="package" description="BestBuy\Service\Remix"/>
      <tag line="3" name="subpackage" description="Type"/>
      <tag line="3" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
      <tag line="3" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt; (v2.0+)"/>
      <tag line="3" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      <tag line="3" name="license" description="http://www.opensource.org/licenses/bsd-license.php"/>
      <tag line="3" name="version" description="$Id: Exception.php 6 2009-02-01 20:34:37Z mattwilliamsnyc $"/>
    </docblock>
    <class final="false" abstract="false" namespace="BestBuy\Service\Remix\Type" line="40" package="BestBuy\Service\Remix\Type">
      <extends>\BestBuy\Service\Remix\Exception</extends>
      <name>Exception</name>
      <full_name>\BestBuy\Service\Remix\Type\Exception</full_name>
      <docblock line="30">
        <description>Base exception class used by the BestBuy\Service\Remix package.</description>
        <long-description></long-description>
        <tag line="30" name="category" description="BestBuy"/>
        <tag line="30" name="package" description="BestBuy\Service\Remix"/>
        <tag line="30" name="subpackage" description="Type"/>
        <tag line="30" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
        <tag line="30" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt; (v2.0+)"/>
        <tag line="30" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      </docblock>
    </class>
  </file>
  <file path="Remix/Type.php" hash="eb1421a35e1b061906e9bb46a093daa0" package="BestBuy\Service\Remix\Type">
    <docblock line="3">
      <description>LICENSE</description>
      <long-description>&lt;p&gt;This source file is subject to the BSD license bundled with this package.&lt;/p&gt;

&lt;p&gt;Available online: {@link http://www.opensource.org/licenses/bsd-license.php}&lt;/p&gt;

&lt;p&gt;If you did not receive a copy of the license, and are unable to obtain it,
email {@link mailto:matt@mattwilliamsnyc.com matt@mattwilliamsnyc.com},
and I will send you a copy.&lt;/p&gt;

&lt;p&gt;{@link http://mattwilliamsnyc.com Matt Williams}, the author,
is neither affiliated with, nor endorsed by,
{@link http://www.bestbuy.com/ Best Buy}.&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="BestBuy"/>
      <tag line="3" name="package" description="BestBuy\Service\Remix"/>
      <tag line="3" name="subpackage" description="Type"/>
      <tag line="3" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
      <tag line="3" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt;"/>
      <tag line="3" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      <tag line="3" name="license" description="http://www.opensource.org/licenses/bsd-license.php"/>
      <tag line="3" name="version" description="$Id: Type.php 14 2009-02-08 22:06:10Z mattwilliamsnyc $"/>
    </docblock>
    <class final="false" abstract="false" namespace="BestBuy\Service\Remix" line="46" package="BestBuy\Service\Remix\Type">
      <extends/>
      <name>Type</name>
      <full_name>\BestBuy\Service\Remix\Type</full_name>
      <docblock line="30">
        <description>{@link BestBuy\Service\Remix\Type} represents a resource type to be targeted by an API call.</description>
        <long-description>&lt;p&gt;Remix currently includes 2 types of information:
{@link http://remix.bestbuy.com/docs/Types/Stores stores} and
{@link http://remix.bestbuy.com/docs/Types/Products products}.&lt;/p&gt;

&lt;p&gt;{@link http://remix.bestbuy.com/docs/Types/Store_Availability Store Availability} information
is available by "joining" the store and product types.&lt;/p&gt;</long-description>
        <tag line="30" name="category" description="BestBuy"/>
        <tag line="30" name="package" description="BestBuy\Service\Remix"/>
        <tag line="30" name="subpackage" description="Type"/>
        <tag line="30" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
        <tag line="30" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt;"/>
        <tag line="30" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="53" namespace="BestBuy\Service\Remix" package="Default">
        <name>$identifier</name>
        <default></default>
        <docblock line="48">
          <description>Unique identifier (Store ID or Product SKU); only used when targeting an individual resource</description>
          <long-description></long-description>
          <tag line="48" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="BestBuy\Service\Remix" package="Default">
        <name>$params</name>
        <default></default>
        <docblock line="55">
          <description>Filters; only used when targeting a collection of stores or products</description>
          <long-description></long-description>
          <tag line="55" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" namespace="BestBuy\Service\Remix" package="Default">
        <name>$format</name>
        <default></default>
        <docblock line="62">
          <description>Desired response format; only used when targeting an individual store or product</description>
          <long-description></long-description>
          <tag line="62" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="BestBuy\Service\Remix" package="Default">
        <name>$type</name>
        <default></default>
        <docblock line="69">
          <description>Primary type of the targeted resource ("stores" or "products")</description>
          <long-description></long-description>
          <tag line="69" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="81" namespace="BestBuy\Service\Remix" package="Default">
        <name>$formats</name>
        <default>array('xml', 'json')</default>
        <docblock line="76">
          <description>Supported resource formats</description>
          <long-description></long-description>
          <tag line="76" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="88" namespace="BestBuy\Service\Remix" package="Default">
        <name>$types</name>
        <default>array('stores', 'products')</default>
        <docblock line="83">
          <description>Supported resource types</description>
          <long-description></long-description>
          <tag line="83" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="126" package="BestBuy\Service\Remix\Type">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="90">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;Instantiates a new resource type using either an identifier (for an indvidual store or product),
or an array containing zero or more filters (to target a collection of stores or products).&lt;/p&gt;

&lt;p&gt;When targeting an individual store or product, $filter should contain a string identifier
(Store ID or Product SKU). When targeting a collection of stores or products, $filter should
contain an array of filtering statements (e.g. array('name=bat*', 'itemUpdateDate&amp;lt;2008-09-03')).&lt;/p&gt;

&lt;p&gt;Filter parameters may use any valid comparison type:
&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;=&lt;/b&gt; ("equal")&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;!= OR &amp;lt;&gt;&lt;/b&gt; ("not equal")&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;&amp;lt; OR &amp;lt;=&lt;/b&gt; ("less than" or "less than or equal to")&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;&gt; OR &gt;=&lt;/b&gt; ("greater than" or "greater than or equal to")&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;&amp;amp;&lt;/b&gt; ("and")&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;*&lt;/b&gt; ("wildcard")&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;Additionally, function-style parameters are supported (e.g. area(postalCode,distance)).&lt;/p&gt;

&lt;p&gt;Examples of valid parameters:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;name=bat*&lt;/li&gt;
  &lt;li&gt;salePrice&lt;=99.99&lt;/li&gt;
  &lt;li&gt;itemUpdateDate&gt;2008-09-03&lt;/li&gt;
  &lt;li&gt;area(11201,10)&lt;/li&gt;
  &lt;li&gt;area(38.89,-77.03,10)&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="90" name="param" description="'stores' or 'products'" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="String identifier (Store ID/Product SKU) or array of filters" type="array|string" variable="$filter">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="'xml' or 'json'; Only used when targeting an individual store or product" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="126">
          <name>$filter</name>
          <default></default>
          <type/>
        </argument>
        <argument line="126">
          <name>$format</name>
          <default>'xml'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="159" package="BestBuy\Service\Remix\Type">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="154">
          <description>Allows this type to be cast to a string.</description>
          <long-description></long-description>
          <tag line="154" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service\Remix" line="175" package="BestBuy\Service\Remix\Type">
        <name>toString</name>
        <full_name>toString</full_name>
        <docblock line="164">
          <description>Formats this type as a URI fragment.</description>
          <long-description>&lt;p&gt;Examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;"stores/4.json"&lt;/li&gt;
  &lt;li&gt;"products(manufacturer='canon'&amp;salePrice&lt;33)"&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="164" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Remix.php" hash="efa3b22243d9e26ca5182007573777e0" package="BestBuy\Service\Remix">
    <docblock line="2">
      <description>LICENSE</description>
      <long-description>&lt;p&gt;This source file is subject to the BSD license bundled with this package.&lt;/p&gt;

&lt;p&gt;Available online: {@link http://www.opensource.org/licenses/bsd-license.php}&lt;/p&gt;

&lt;p&gt;If you did not receive a copy of the license, and are unable to obtain it,
email {@link mailto:matt@mattwilliamsnyc.com matt@mattwilliamsnyc.com},
and I will send you a copy.&lt;/p&gt;

&lt;p&gt;{@link http://mattwilliamsnyc.com Matt Williams}, the author,
is neither affiliated with, nor endorsed by,
{@link http://www.bestbuy.com/ Best Buy}.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="BestBuy"/>
      <tag line="2" name="package" description="BestBuy\Service\Remix"/>
      <tag line="2" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
      <tag line="2" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt;"/>
      <tag line="2" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/bsd-license.php"/>
      <tag line="2" name="version" description="$Id: Remix.php 23 2010-01-14 15:27:13Z mattwilliamsnyc $"/>
    </docblock>
    <class final="false" abstract="false" namespace="BestBuy\Service" line="39" package="BestBuy\Service\Remix">
      <extends/>
      <name>Remix</name>
      <full_name>\BestBuy\Service\Remix</full_name>
      <docblock line="28">
        <description>{@link BestBuy\Service\Remix} provides methods for interacting with (version 1 of)
{@link http://www.bestbuy.com Best Buy}'s {@link http://remix.bestbuy.com Remix} API
and is based on the publicly available {@link http://remix.bestbuy.com/docs API documentation}.</description>
        <long-description></long-description>
        <tag line="28" name="category" description="BestBuy"/>
        <tag line="28" name="package" description="BestBuy\Service\Remix"/>
        <tag line="28" name="author" description="Matt Williams &lt;matt@mattwilliamsnyc.com&gt;"/>
        <tag line="28" name="author" description="Troy McCabe (v2.0+) &lt;troy.mccabe@geeksquad.com&gt;"/>
        <tag line="28" name="copyright" description="Copyright (c) 2008 {@link http://mattwilliamsnyc.com Matt Williams}"/>
      </docblock>
      <constant namespace="BestBuy\Service" line="44" package="BestBuy\Service\Remix">
        <name>API_BASE</name>
        <full_name>API_BASE</full_name>
        <value>'http://api.remix.bestbuy.com/v1'</value>
        <docblock line="41">
          <description>Entry point for all API requests</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="49" namespace="BestBuy\Service" package="Default">
        <name>$apiKey</name>
        <default></default>
        <docblock line="46">
          <description>Key used to identify a client application to the API service</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="BestBuy\Service" package="Default">
        <name>$timeout</name>
        <default>10</default>
        <docblock line="51">
          <description>Length of time (in seconds) to wait for a response to an API call</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="BestBuy\Service" package="Default">
        <name>$params</name>
        <default>array()</default>
        <docblock line="56">
          <description>Query parameters to be appended to an API request URI</description>
          <long-description></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="BestBuy\Service" package="Default">
        <name>$types</name>
        <default>array()</default>
        <docblock line="61">
          <description>Resource types (e.g.</description>
          <long-description>&lt;p&gt;stores, products) to be targeted by an API call&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="73" package="BestBuy\Service\Remix">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="66">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;Instantiates a new Remix API client with an API Key identifier&lt;/p&gt;</long-description>
          <tag line="66" name="param" description="Key used to identify a client application to the API service" type="string" variable="$apiKey">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$apiKey</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="88" package="BestBuy\Service\Remix">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="78">
          <description>Allows query parameters to be assigned using a convenient key($value) syntax (e.g.</description>
          <long-description>&lt;p&gt;format('json')).&lt;/p&gt;

&lt;p&gt;This is an alternative to setting all parameters simultaneously via the {@link params()} method.&lt;/p&gt;</long-description>
          <tag line="78" name="param" description="Name of the query parameter to which a value will be assigned" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="param" description="List of arguments; the first value is assigned to the targeted query parameter" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="113" package="BestBuy\Service\Remix">
        <name>products</name>
        <full_name>products</full_name>
        <docblock line="101">
          <description>Targets the (optionally filtered) {@link http://remix.bestbuy.com/docs/Types/Products products}
resource for an API call.</description>
          <long-description>&lt;p&gt;May be used in combination with {@link stores()} to check for
{@link http://remix.bestbuy.com/docs/Types/Store_Availability store availability}.&lt;/p&gt;</long-description>
          <tag line="101" name="param" description="One or more criteria used to filter results" type="array" variable="$filters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="101" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
          <tag line="101" name="throws" description="" type="\BestBuy\Service\Remix\Exception">
            <type by_reference="false">\BestBuy\Service\Remix\Exception</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$filters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="130" package="BestBuy\Service\Remix">
        <name>product</name>
        <full_name>product</full_name>
        <docblock line="120">
          <description>Targets a specific {@link http://remix.bestbuy.com/docs/Types/Products product}
resource (by SKU #) for an API call.</description>
          <long-description></long-description>
          <tag line="120" name="param" description="Identifier (SKU #) of the product to be targeted" type="string" variable="$sku">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="Desired response format ('xml' or 'json')" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
          <tag line="120" name="throws" description="" type="\BestBuy\Service\Remix\Exception">
            <type by_reference="false">\BestBuy\Service\Remix\Exception</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$sku</name>
          <default></default>
          <type/>
        </argument>
        <argument line="130">
          <name>$format</name>
          <default>'xml'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="149" package="BestBuy\Service\Remix">
        <name>stores</name>
        <full_name>stores</full_name>
        <docblock line="137">
          <description>Targets the (optionally filtered) {@link http://remix.bestbuy.com/docs/Types/Stores stores}
resource for an API call.</description>
          <long-description>&lt;p&gt;May be used in combination with {@link products()} to check for
{@link http://remix.bestbuy.com/docs/Types/Store_Availability store availability}.&lt;/p&gt;</long-description>
          <tag line="137" name="param" description="One or more criteria used to filter results" type="array" variable="$filters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="137" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
          <tag line="137" name="throws" description="" type="\BestBuy\Service\Remix\Exception">
            <type by_reference="false">\BestBuy\Service\Remix\Exception</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$filters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="166" package="BestBuy\Service\Remix">
        <name>store</name>
        <full_name>store</full_name>
        <docblock line="156">
          <description>Targets a specific {@link http://remix.bestbuy.com/docs/Types/Stores store}
resource (by Store ID) for an API call.</description>
          <long-description></long-description>
          <tag line="156" name="param" description="Identifier (Store ID) of the store to be targeted" type="string" variable="$storeId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="Desired response format ('xml' or 'json')" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
          <tag line="156" name="throws" description="" type="\BestBuy\Service\Remix\Exception">
            <type by_reference="false">\BestBuy\Service\Remix\Exception</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="166">
          <name>$format</name>
          <default>'xml'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="180" package="BestBuy\Service\Remix">
        <name>params</name>
        <full_name>params</full_name>
        <docblock line="173">
          <description>Assigns one or more query parameters (as name/value pairs) to be included with an API call.</description>
          <long-description></long-description>
          <tag line="173" name="param" description="Name/value pairs to be assigned as query parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="173" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="198" package="BestBuy\Service\Remix">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="193">
          <description>Clears all targeted resource types and query parameters; called after every {@link query()}.</description>
          <long-description></long-description>
          <tag line="193" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="213" package="BestBuy\Service\Remix">
        <name>getTargetUri</name>
        <full_name>getTargetUri</full_name>
        <docblock line="206">
          <description>Returns the current target URI including any assigned query parameters.</description>
          <long-description>&lt;p&gt;IMPORTANT: Target URIs include the API key assigned to this client; protect this data appropriately.&lt;/p&gt;</long-description>
          <tag line="206" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="235" package="BestBuy\Service\Remix">
        <name>setTimeout</name>
        <full_name>setTimeout</full_name>
        <docblock line="227">
          <description>Sets the amount of time (in seconds) to wait for a response to an API call.</description>
          <long-description></long-description>
          <tag line="227" name="param" description="Length of time (in seconds) to wait before timing out" type="integer" variable="$timeout">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="227" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
          <tag line="227" name="throws" description="" type="\BestBuy\Service\Remix\Exception">
            <type by_reference="false">\BestBuy\Service\Remix\Exception</type>
          </tag>
        </docblock>
        <argument line="235">
          <name>$timeout</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="BestBuy\Service" line="252" package="BestBuy\Service\Remix">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="246">
          <description>Submits a query to the Remix API and returns the {@link BestBuy_Service_Remix_Response response}.</description>
          <long-description></long-description>
          <tag line="246" name="return" description="" type="\BestBuy\Service\Remix">
            <type by_reference="false">\BestBuy\Service\Remix</type>
          </tag>
          <tag line="246" name="throws" description="" type="\BestBuy\Service\Remix\Exception">
            <type by_reference="false">\BestBuy\Service\Remix\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="BestBuy\Service" line="284" package="BestBuy\Service\Remix">
        <name>buildType</name>
        <full_name>buildType</full_name>
        <docblock line="275">
          <description>Builds a resource {@link BestBuy_Service_Remix_Type type} to be targeted for an API call.</description>
          <long-description></long-description>
          <tag line="275" name="param" description="Desired resource type ('stores' or 'products')" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="Identifier or filter array used to target this type resource" type="string|array" variable="$filter">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="275" name="param" description="Desired response format ('json' or 'xml')" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="return" description="" type="\BestBuy\Service\Remix\Type">
            <type by_reference="false">\BestBuy\Service\Remix\Type</type>
          </tag>
        </docblock>
        <argument line="284">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="284">
          <name>$filter</name>
          <default></default>
          <type/>
        </argument>
        <argument line="284">
          <name>$format</name>
          <default>'xml'</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="156" code="50014">Name of argument $identifier does not match with the DocBlock's name $storeId in store()</error>
      <notice line="156" code="50013">Parameter $storeId could not be found in store()</notice>
    </parse_markers>
  </file>
  <package name="BestBuy" full_name="BestBuy">
    <package name="Service" full_name="BestBuy\Service">
      <package name="Remix" full_name="BestBuy\Service\Remix">
        <package name="Response" full_name="BestBuy\Service\Remix\Response"/>
        <package name="Type" full_name="BestBuy\Service\Remix\Type"/>
      </package>
    </package>
  </package>
  <package name="Default" full_name="Default"/>
  <namespace name="BestBuy" full_name="BestBuy">
    <namespace name="Service" full_name="BestBuy\Service">
      <namespace name="Remix" full_name="BestBuy\Service\Remix">
        <namespace name="Type" full_name="BestBuy\Service\Remix\Type"/>
      </namespace>
    </namespace>
  </namespace>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
